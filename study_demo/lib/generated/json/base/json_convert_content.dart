// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:study_demo/page/kitchen/model/detail_model_entity.dart';
import 'package:study_demo/generated/json/detail_model_entity_helper.dart';
import 'package:study_demo/page/kitchen/model/video_model_entity.dart';
import 'package:study_demo/generated/json/video_model_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case DetailModelEntity:
			return detailModelEntityFromJson(data as DetailModelEntity, json) as T;			case DetailModelContent:
			return detailModelContentFromJson(data as DetailModelContent, json) as T;			case DetailModelContentRecipe:
			return detailModelContentRecipeFromJson(data as DetailModelContentRecipe, json) as T;			case DetailModelContentRecipeImage:
			return detailModelContentRecipeImageFromJson(data as DetailModelContentRecipeImage, json) as T;			case DetailModelContentRecipeMinorAuthor:
			return detailModelContentRecipeMinorAuthorFromJson(data as DetailModelContentRecipeMinorAuthor, json) as T;			case DetailModelContentRecipeAdaptation:
			return detailModelContentRecipeAdaptationFromJson(data as DetailModelContentRecipeAdaptation, json) as T;			case DetailModelContentRecipeAuthor:
			return detailModelContentRecipeAuthorFromJson(data as DetailModelContentRecipeAuthor, json) as T;			case DetailModelContentRecipeAuthorImage:
			return detailModelContentRecipeAuthorImageFromJson(data as DetailModelContentRecipeAuthorImage, json) as T;			case DetailModelContentRecipeAuthorLabel:
			return detailModelContentRecipeAuthorLabelFromJson(data as DetailModelContentRecipeAuthorLabel, json) as T;			case DetailModelContentRecipeIngredient:
			return detailModelContentRecipeIngredientFromJson(data as DetailModelContentRecipeIngredient, json) as T;			case DetailModelContentRecipeInstruction:
			return detailModelContentRecipeInstructionFromJson(data as DetailModelContentRecipeInstruction, json) as T;			case DetailModelContentRecipeInstructionVideo:
			return detailModelContentRecipeInstructionVideoFromJson(data as DetailModelContentRecipeInstructionVideo, json) as T;			case DetailModelContentRecipeInstructionImage:
			return detailModelContentRecipeInstructionImageFromJson(data as DetailModelContentRecipeInstructionImage, json) as T;			case DetailModelContentRecipeStats:
			return detailModelContentRecipeStatsFromJson(data as DetailModelContentRecipeStats, json) as T;			case DetailModelContentRecipeEquipmentRelatedInfo:
			return detailModelContentRecipeEquipmentRelatedInfoFromJson(data as DetailModelContentRecipeEquipmentRelatedInfo, json) as T;			case DetailModelContentRecipePurchaseButton:
			return detailModelContentRecipePurchaseButtonFromJson(data as DetailModelContentRecipePurchaseButton, json) as T;			case DetailModelContentRecipeCoverMicroVideo:
			return detailModelContentRecipeCoverMicroVideoFromJson(data as DetailModelContentRecipeCoverMicroVideo, json) as T;			case DetailModelContentRecipeVodVideo:
			return detailModelContentRecipeVodVideoFromJson(data as DetailModelContentRecipeVodVideo, json) as T;			case VideoModelEntity:
			return videoModelEntityFromJson(data as VideoModelEntity, json) as T;			case VideoModelPortal:
			return videoModelPortalFromJson(data as VideoModelPortal, json) as T;			case VideoModelPortalsObject:
			return videoModelPortalsObjectFromJson(data as VideoModelPortalsObject, json) as T;			case VideoModelPortalsObjectImage:
			return videoModelPortalsObjectImageFromJson(data as VideoModelPortalsObjectImage, json) as T;			case VideoModelPortalsTracking:
			return videoModelPortalsTrackingFromJson(data as VideoModelPortalsTracking, json) as T;			case VideoModelContent:
			return videoModelContentFromJson(data as VideoModelContent, json) as T;			case VideoModelContentRecommandations:
			return videoModelContentRecommandationsFromJson(data as VideoModelContentRecommandations, json) as T;			case VideoModelContentRecommendationsRecommendContent:
			return videoModelContentRecommendationsRecommendContentFromJson(data as VideoModelContentRecommendationsRecommendContent, json) as T;			case VideoModelContentRecommendationsRecommendContentImage:
			return videoModelContentRecommendationsRecommendContentImageFromJson(data as VideoModelContentRecommendationsRecommendContentImage, json) as T;			case VideoModelContentRecommendationsRecommendContentAuthor:
			return videoModelContentRecommendationsRecommendContentAuthorFromJson(data as VideoModelContentRecommendationsRecommendContentAuthor, json) as T;			case VideoModelContentRecommendationsRecommendContentAuthorImage:
			return videoModelContentRecommendationsRecommendContentAuthorImageFromJson(data as VideoModelContentRecommendationsRecommendContentAuthorImage, json) as T;			case VideoModelContentRecommendationsRecommendContentExtra:
			return videoModelContentRecommendationsRecommendContentExtraFromJson(data as VideoModelContentRecommendationsRecommendContentExtra, json) as T;			case VideoModelContentRecommendationsRecommendContentTargetInfo:
			return videoModelContentRecommendationsRecommendContentTargetInfoFromJson(data as VideoModelContentRecommendationsRecommendContentTargetInfo, json) as T;			case VideoModelContentRecommendationsTracking:
			return videoModelContentRecommendationsTrackingFromJson(data as VideoModelContentRecommendationsTracking, json) as T;			case VideoModelContentRecommendationsSensorTracking:
			return videoModelContentRecommendationsSensorTrackingFromJson(data as VideoModelContentRecommendationsSensorTracking, json) as T;			case VideoModelContentRecommandationsSensorTrackingDigg:
			return videoModelContentRecommandationsSensorTrackingDiggFromJson(data as VideoModelContentRecommandationsSensorTrackingDigg, json) as T;			case VideoModelContentRecommendationsSensorTrackingDiggProperties:
			return videoModelContentRecommendationsSensorTrackingDiggPropertiesFromJson(data as VideoModelContentRecommendationsSensorTrackingDiggProperties, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case DetailModelEntity:
			return detailModelEntityToJson(data as DetailModelEntity);			case DetailModelContent:
			return detailModelContentToJson(data as DetailModelContent);			case DetailModelContentRecipe:
			return detailModelContentRecipeToJson(data as DetailModelContentRecipe);			case DetailModelContentRecipeImage:
			return detailModelContentRecipeImageToJson(data as DetailModelContentRecipeImage);			case DetailModelContentRecipeMinorAuthor:
			return detailModelContentRecipeMinorAuthorToJson(data as DetailModelContentRecipeMinorAuthor);			case DetailModelContentRecipeAdaptation:
			return detailModelContentRecipeAdaptationToJson(data as DetailModelContentRecipeAdaptation);			case DetailModelContentRecipeAuthor:
			return detailModelContentRecipeAuthorToJson(data as DetailModelContentRecipeAuthor);			case DetailModelContentRecipeAuthorImage:
			return detailModelContentRecipeAuthorImageToJson(data as DetailModelContentRecipeAuthorImage);			case DetailModelContentRecipeAuthorLabel:
			return detailModelContentRecipeAuthorLabelToJson(data as DetailModelContentRecipeAuthorLabel);			case DetailModelContentRecipeIngredient:
			return detailModelContentRecipeIngredientToJson(data as DetailModelContentRecipeIngredient);			case DetailModelContentRecipeInstruction:
			return detailModelContentRecipeInstructionToJson(data as DetailModelContentRecipeInstruction);			case DetailModelContentRecipeInstructionVideo:
			return detailModelContentRecipeInstructionVideoToJson(data as DetailModelContentRecipeInstructionVideo);			case DetailModelContentRecipeInstructionImage:
			return detailModelContentRecipeInstructionImageToJson(data as DetailModelContentRecipeInstructionImage);			case DetailModelContentRecipeStats:
			return detailModelContentRecipeStatsToJson(data as DetailModelContentRecipeStats);			case DetailModelContentRecipeEquipmentRelatedInfo:
			return detailModelContentRecipeEquipmentRelatedInfoToJson(data as DetailModelContentRecipeEquipmentRelatedInfo);			case DetailModelContentRecipePurchaseButton:
			return detailModelContentRecipePurchaseButtonToJson(data as DetailModelContentRecipePurchaseButton);			case DetailModelContentRecipeCoverMicroVideo:
			return detailModelContentRecipeCoverMicroVideoToJson(data as DetailModelContentRecipeCoverMicroVideo);			case DetailModelContentRecipeVodVideo:
			return detailModelContentRecipeVodVideoToJson(data as DetailModelContentRecipeVodVideo);			case VideoModelEntity:
			return videoModelEntityToJson(data as VideoModelEntity);			case VideoModelPortal:
			return videoModelPortalToJson(data as VideoModelPortal);			case VideoModelPortalsObject:
			return videoModelPortalsObjectToJson(data as VideoModelPortalsObject);			case VideoModelPortalsObjectImage:
			return videoModelPortalsObjectImageToJson(data as VideoModelPortalsObjectImage);			case VideoModelPortalsTracking:
			return videoModelPortalsTrackingToJson(data as VideoModelPortalsTracking);			case VideoModelContent:
			return videoModelContentToJson(data as VideoModelContent);			case VideoModelContentRecommandations:
			return videoModelContentRecommandationsToJson(data as VideoModelContentRecommandations);			case VideoModelContentRecommendationsRecommendContent:
			return videoModelContentRecommendationsRecommendContentToJson(data as VideoModelContentRecommendationsRecommendContent);			case VideoModelContentRecommendationsRecommendContentImage:
			return videoModelContentRecommendationsRecommendContentImageToJson(data as VideoModelContentRecommendationsRecommendContentImage);			case VideoModelContentRecommendationsRecommendContentAuthor:
			return videoModelContentRecommendationsRecommendContentAuthorToJson(data as VideoModelContentRecommendationsRecommendContentAuthor);			case VideoModelContentRecommendationsRecommendContentAuthorImage:
			return videoModelContentRecommendationsRecommendContentAuthorImageToJson(data as VideoModelContentRecommendationsRecommendContentAuthorImage);			case VideoModelContentRecommendationsRecommendContentExtra:
			return videoModelContentRecommendationsRecommendContentExtraToJson(data as VideoModelContentRecommendationsRecommendContentExtra);			case VideoModelContentRecommendationsRecommendContentTargetInfo:
			return videoModelContentRecommendationsRecommendContentTargetInfoToJson(data as VideoModelContentRecommendationsRecommendContentTargetInfo);			case VideoModelContentRecommendationsTracking:
			return videoModelContentRecommendationsTrackingToJson(data as VideoModelContentRecommendationsTracking);			case VideoModelContentRecommendationsSensorTracking:
			return videoModelContentRecommendationsSensorTrackingToJson(data as VideoModelContentRecommendationsSensorTracking);			case VideoModelContentRecommandationsSensorTrackingDigg:
			return videoModelContentRecommandationsSensorTrackingDiggToJson(data as VideoModelContentRecommandationsSensorTrackingDigg);			case VideoModelContentRecommendationsSensorTrackingDiggProperties:
			return videoModelContentRecommendationsSensorTrackingDiggPropertiesToJson(data as VideoModelContentRecommendationsSensorTrackingDiggProperties);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'DetailModelEntity':
			return DetailModelEntity().fromJson(json);			case 'DetailModelContent':
			return DetailModelContent().fromJson(json);			case 'DetailModelContentRecipe':
			return DetailModelContentRecipe().fromJson(json);			case 'DetailModelContentRecipeImage':
			return DetailModelContentRecipeImage().fromJson(json);			case 'DetailModelContentRecipeMinorAuthor':
			return DetailModelContentRecipeMinorAuthor().fromJson(json);			case 'DetailModelContentRecipeAdaptation':
			return DetailModelContentRecipeAdaptation().fromJson(json);			case 'DetailModelContentRecipeAuthor':
			return DetailModelContentRecipeAuthor().fromJson(json);			case 'DetailModelContentRecipeAuthorImage':
			return DetailModelContentRecipeAuthorImage().fromJson(json);			case 'DetailModelContentRecipeAuthorLabel':
			return DetailModelContentRecipeAuthorLabel().fromJson(json);			case 'DetailModelContentRecipeIngredient':
			return DetailModelContentRecipeIngredient().fromJson(json);			case 'DetailModelContentRecipeInstruction':
			return DetailModelContentRecipeInstruction().fromJson(json);			case 'DetailModelContentRecipeInstructionVideo':
			return DetailModelContentRecipeInstructionVideo().fromJson(json);			case 'DetailModelContentRecipeInstructionImage':
			return DetailModelContentRecipeInstructionImage().fromJson(json);			case 'DetailModelContentRecipeStats':
			return DetailModelContentRecipeStats().fromJson(json);			case 'DetailModelContentRecipeEquipmentRelatedInfo':
			return DetailModelContentRecipeEquipmentRelatedInfo().fromJson(json);			case 'DetailModelContentRecipePurchaseButton':
			return DetailModelContentRecipePurchaseButton().fromJson(json);			case 'DetailModelContentRecipeCoverMicroVideo':
			return DetailModelContentRecipeCoverMicroVideo().fromJson(json);			case 'DetailModelContentRecipeVodVideo':
			return DetailModelContentRecipeVodVideo().fromJson(json);			case 'VideoModelEntity':
			return VideoModelEntity().fromJson(json);			case 'VideoModelPortal':
			return VideoModelPortal().fromJson(json);			case 'VideoModelPortalsObject':
			return VideoModelPortalsObject().fromJson(json);			case 'VideoModelPortalsObjectImage':
			return VideoModelPortalsObjectImage().fromJson(json);			case 'VideoModelPortalsTracking':
			return VideoModelPortalsTracking().fromJson(json);			case 'VideoModelContent':
			return VideoModelContent().fromJson(json);			case 'VideoModelContentRecommandations':
			return VideoModelContentRecommandations().fromJson(json);			case 'VideoModelContentRecommendationsRecommendContent':
			return VideoModelContentRecommendationsRecommendContent().fromJson(json);			case 'VideoModelContentRecommendationsRecommendContentImage':
			return VideoModelContentRecommendationsRecommendContentImage().fromJson(json);			case 'VideoModelContentRecommendationsRecommendContentAuthor':
			return VideoModelContentRecommendationsRecommendContentAuthor().fromJson(json);			case 'VideoModelContentRecommendationsRecommendContentAuthorImage':
			return VideoModelContentRecommendationsRecommendContentAuthorImage().fromJson(json);			case 'VideoModelContentRecommendationsRecommendContentExtra':
			return VideoModelContentRecommendationsRecommendContentExtra().fromJson(json);			case 'VideoModelContentRecommendationsRecommendContentTargetInfo':
			return VideoModelContentRecommendationsRecommendContentTargetInfo().fromJson(json);			case 'VideoModelContentRecommendationsTracking':
			return VideoModelContentRecommendationsTracking().fromJson(json);			case 'VideoModelContentRecommendationsSensorTracking':
			return VideoModelContentRecommendationsSensorTracking().fromJson(json);			case 'VideoModelContentRecommandationsSensorTrackingDigg':
			return VideoModelContentRecommandationsSensorTrackingDigg().fromJson(json);			case 'VideoModelContentRecommendationsSensorTrackingDiggProperties':
			return VideoModelContentRecommendationsSensorTrackingDiggProperties().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'DetailModelEntity':
			return List<DetailModelEntity>();			case 'DetailModelContent':
			return List<DetailModelContent>();			case 'DetailModelContentRecipe':
			return List<DetailModelContentRecipe>();			case 'DetailModelContentRecipeImage':
			return List<DetailModelContentRecipeImage>();			case 'DetailModelContentRecipeMinorAuthor':
			return List<DetailModelContentRecipeMinorAuthor>();			case 'DetailModelContentRecipeAdaptation':
			return List<DetailModelContentRecipeAdaptation>();			case 'DetailModelContentRecipeAuthor':
			return List<DetailModelContentRecipeAuthor>();			case 'DetailModelContentRecipeAuthorImage':
			return List<DetailModelContentRecipeAuthorImage>();			case 'DetailModelContentRecipeAuthorLabel':
			return List<DetailModelContentRecipeAuthorLabel>();			case 'DetailModelContentRecipeIngredient':
			return List<DetailModelContentRecipeIngredient>();			case 'DetailModelContentRecipeInstruction':
			return List<DetailModelContentRecipeInstruction>();			case 'DetailModelContentRecipeInstructionVideo':
			return List<DetailModelContentRecipeInstructionVideo>();			case 'DetailModelContentRecipeInstructionImage':
			return List<DetailModelContentRecipeInstructionImage>();			case 'DetailModelContentRecipeStats':
			return List<DetailModelContentRecipeStats>();			case 'DetailModelContentRecipeEquipmentRelatedInfo':
			return List<DetailModelContentRecipeEquipmentRelatedInfo>();			case 'DetailModelContentRecipePurchaseButton':
			return List<DetailModelContentRecipePurchaseButton>();			case 'DetailModelContentRecipeCoverMicroVideo':
			return List<DetailModelContentRecipeCoverMicroVideo>();			case 'DetailModelContentRecipeVodVideo':
			return List<DetailModelContentRecipeVodVideo>();			case 'VideoModelEntity':
			return List<VideoModelEntity>();			case 'VideoModelPortal':
			return List<VideoModelPortal>();			case 'VideoModelPortalsObject':
			return List<VideoModelPortalsObject>();			case 'VideoModelPortalsObjectImage':
			return List<VideoModelPortalsObjectImage>();			case 'VideoModelPortalsTracking':
			return List<VideoModelPortalsTracking>();			case 'VideoModelContent':
			return List<VideoModelContent>();			case 'VideoModelContentRecommandations':
			return List<VideoModelContentRecommandations>();			case 'VideoModelContentRecommendationsRecommendContent':
			return List<VideoModelContentRecommendationsRecommendContent>();			case 'VideoModelContentRecommendationsRecommendContentImage':
			return List<VideoModelContentRecommendationsRecommendContentImage>();			case 'VideoModelContentRecommendationsRecommendContentAuthor':
			return List<VideoModelContentRecommendationsRecommendContentAuthor>();			case 'VideoModelContentRecommendationsRecommendContentAuthorImage':
			return List<VideoModelContentRecommendationsRecommendContentAuthorImage>();			case 'VideoModelContentRecommendationsRecommendContentExtra':
			return List<VideoModelContentRecommendationsRecommendContentExtra>();			case 'VideoModelContentRecommendationsRecommendContentTargetInfo':
			return List<VideoModelContentRecommendationsRecommendContentTargetInfo>();			case 'VideoModelContentRecommendationsTracking':
			return List<VideoModelContentRecommendationsTracking>();			case 'VideoModelContentRecommendationsSensorTracking':
			return List<VideoModelContentRecommendationsSensorTracking>();			case 'VideoModelContentRecommandationsSensorTrackingDigg':
			return List<VideoModelContentRecommandationsSensorTrackingDigg>();			case 'VideoModelContentRecommendationsSensorTrackingDiggProperties':
			return List<VideoModelContentRecommendationsSensorTrackingDiggProperties>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}